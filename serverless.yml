service: music-api

frameworkVersion: '2'

plugins:
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  environment:
    TABLE_NAME: 'music-uploads'
    ACCOUNT_ID: '#{AWS::AccountId}'
    REGION: '#{AWS::Region}'
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:provider.environment.TABLE_NAME}"

  stage: dev
#  region: us-east-1

functions:
  getAllMusic:
    handler: lambda/getall-music.getAllMusic
    events:
      - http:
          path: music/
          method: GET

  createMusic:
    handler: lambda/create-music.createMusic
    events:
      - http:
          path: music/
          method: POST

  updateMusic:
    handler: lambda/update-music.updateMusic
    events:
      - http:
          path: music/{id}
          method: PUT

  deleteMusic:
    handler: lambda/delete-music.deleteMusic
    events:
      - http:
          path: music/{id}
          method: DELETE

  getMusic:
    handler: lambda/get-music.getMusic
    events:
      - http:
          path: music/{id}
          method: GET

resources:
 Resources:
   MusicTable:
     Type: AWS::DynamoDB::Table
     Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions: 
            - AttributeName : ID
              AttributeType : S
        KeySchema:
            - AttributeName  : ID
              KeyType : HASH
        ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1